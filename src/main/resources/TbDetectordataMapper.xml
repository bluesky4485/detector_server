<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.monitor.mapper.TbDetectordataMapper" >
  <resultMap id="BaseResultMap" type="com.monitor.pojo.TbDetectordata" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="device_mainid" property="deviceMainid" jdbcType="INTEGER" />
    <result column="device_minorid" property="deviceMinorid" jdbcType="INTEGER" />
    <result column="current" property="current" jdbcType="REAL" />
    <result column="voltage" property="voltage" jdbcType="REAL" />
    <result column="temperature" property="temperature" jdbcType="REAL" />
    <result column="frequency" property="frequency" jdbcType="REAL" />
    <result column="apparent_power" property="apparentPower" jdbcType="REAL" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, device_mainid, device_minorid, current, voltage, temperature, frequency, apparent_power, 
    created
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.monitor.pojo.TbDetectordataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_detectordata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_detectordata
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_detectordata
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.monitor.pojo.TbDetectordataExample" >
    delete from tb_detectordata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.monitor.pojo.TbDetectordata" >
    insert into tb_detectordata (id, device_mainid, device_minorid, 
      current, voltage, temperature, 
      frequency, apparent_power, created
      )
    values (#{id,jdbcType=BIGINT}, #{deviceMainid,jdbcType=INTEGER}, #{deviceMinorid,jdbcType=INTEGER}, 
      #{current,jdbcType=REAL}, #{voltage,jdbcType=REAL}, #{temperature,jdbcType=REAL}, 
      #{frequency,jdbcType=REAL}, #{apparentPower,jdbcType=REAL}, #{created,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.monitor.pojo.TbDetectordata" >
    insert into tb_detectordata
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deviceMainid != null" >
        device_mainid,
      </if>
      <if test="deviceMinorid != null" >
        device_minorid,
      </if>
      <if test="current != null" >
        current,
      </if>
      <if test="voltage != null" >
        voltage,
      </if>
      <if test="temperature != null" >
        temperature,
      </if>
      <if test="frequency != null" >
        frequency,
      </if>
      <if test="apparentPower != null" >
        apparent_power,
      </if>
      <if test="created != null" >
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="deviceMainid != null" >
        #{deviceMainid,jdbcType=INTEGER},
      </if>
      <if test="deviceMinorid != null" >
        #{deviceMinorid,jdbcType=INTEGER},
      </if>
      <if test="current != null" >
        #{current,jdbcType=REAL},
      </if>
      <if test="voltage != null" >
        #{voltage,jdbcType=REAL},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=REAL},
      </if>
      <if test="frequency != null" >
        #{frequency,jdbcType=REAL},
      </if>
      <if test="apparentPower != null" >
        #{apparentPower,jdbcType=REAL},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.monitor.pojo.TbDetectordataExample" resultType="java.lang.Integer" >
    select count(*) from tb_detectordata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_detectordata
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.deviceMainid != null" >
        device_mainid = #{record.deviceMainid,jdbcType=INTEGER},
      </if>
      <if test="record.deviceMinorid != null" >
        device_minorid = #{record.deviceMinorid,jdbcType=INTEGER},
      </if>
      <if test="record.current != null" >
        current = #{record.current,jdbcType=REAL},
      </if>
      <if test="record.voltage != null" >
        voltage = #{record.voltage,jdbcType=REAL},
      </if>
      <if test="record.temperature != null" >
        temperature = #{record.temperature,jdbcType=REAL},
      </if>
      <if test="record.frequency != null" >
        frequency = #{record.frequency,jdbcType=REAL},
      </if>
      <if test="record.apparentPower != null" >
        apparent_power = #{record.apparentPower,jdbcType=REAL},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_detectordata
    set id = #{record.id,jdbcType=BIGINT},
      device_mainid = #{record.deviceMainid,jdbcType=INTEGER},
      device_minorid = #{record.deviceMinorid,jdbcType=INTEGER},
      current = #{record.current,jdbcType=REAL},
      voltage = #{record.voltage,jdbcType=REAL},
      temperature = #{record.temperature,jdbcType=REAL},
      frequency = #{record.frequency,jdbcType=REAL},
      apparent_power = #{record.apparentPower,jdbcType=REAL},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.monitor.pojo.TbDetectordata" >
    update tb_detectordata
    <set >
      <if test="deviceMainid != null" >
        device_mainid = #{deviceMainid,jdbcType=INTEGER},
      </if>
      <if test="deviceMinorid != null" >
        device_minorid = #{deviceMinorid,jdbcType=INTEGER},
      </if>
      <if test="current != null" >
        current = #{current,jdbcType=REAL},
      </if>
      <if test="voltage != null" >
        voltage = #{voltage,jdbcType=REAL},
      </if>
      <if test="temperature != null" >
        temperature = #{temperature,jdbcType=REAL},
      </if>
      <if test="frequency != null" >
        frequency = #{frequency,jdbcType=REAL},
      </if>
      <if test="apparentPower != null" >
        apparent_power = #{apparentPower,jdbcType=REAL},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.monitor.pojo.TbDetectordata" >
    update tb_detectordata
    set device_mainid = #{deviceMainid,jdbcType=INTEGER},
      device_minorid = #{deviceMinorid,jdbcType=INTEGER},
      current = #{current,jdbcType=REAL},
      voltage = #{voltage,jdbcType=REAL},
      temperature = #{temperature,jdbcType=REAL},
      frequency = #{frequency,jdbcType=REAL},
      apparent_power = #{apparentPower,jdbcType=REAL},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>